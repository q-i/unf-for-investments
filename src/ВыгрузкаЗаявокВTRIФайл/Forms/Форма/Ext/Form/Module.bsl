
&НаСервере
Функция ПолучитьДанныеНаСервере()
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуЗапасы.НомерСтроки КАК НомерСтроки,
	|	ЗаказПоставщикуЗапасы.Номенклатура.Артикул КАК КодБумаги,
	|	ЗаказПоставщикуЗапасы.Количество КАК Количество,
	|	ЗаказПоставщикуЗапасы.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуЗапасы.Ссылка.ПоложениеДатыПоступления = ЗНАЧЕНИЕ(Перечисление.ПоложениеРеквизитаНаФорме.ВШапке)
	|			ТОГДА ЗаказПоставщикуЗапасы.Ссылка.ДатаПоступления
	|		ИНАЧЕ ЗаказПоставщикуЗапасы.ДатаПоступления
	|	КОНЕЦ КАК СрокДействия
	|ИЗ
	|	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
	|ГДЕ
	|	ЗаказПоставщикуЗапасы.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Запрос.УстановитьПараметр("Ссылка", ЗаказПоставщику);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОписаниеЗаявки = Новый Структура("КодБумаги, Цена, Количество, СрокДействия");
		ЗаполнитьЗначенияСвойств(ОписаниеЗаявки, Выборка);
		Результат.Добавить(ОписаниеЗаявки);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Процедура ВыгрузитьЗаявки(МассивОписанийЗаявок)
	
	ФорматЦены			= "ЧРД=.; ЧГ=";
	ФорматКоличества	= "ЧРД=.; ЧГ=";
	ФорматДаты			= "ДФ=yyyyMMdd";
	
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.ANSI);
	
	ИдТранзакции = НачЗначTransID;
	
	Для Каждого ОписаниеЗаявки Из МассивОписанийЗаявок Цикл
		
		КодБумаги = ОписаниеЗаявки.КодБумаги;
		Если НЕ ЗначениеЗаполнено(КодБумаги) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана код бумаги в строке данных!");
			Продолжить;
		КонецЕсли; 
		ЦенаЗаявки	= ОписаниеЗаявки.Цена;
		Если НЕ ЗначениеЗаполнено(ЦенаЗаявки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана цена для бумаги " + КодБумаги);
			Продолжить;
		КонецЕсли; 
		КолвоЗаявки	= ОписаниеЗаявки.Количество;
		Если НЕ ЗначениеЗаполнено(КолвоЗаявки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано количество для бумаги " + КодБумаги);
			Продолжить;
		КонецЕсли;
		ДатаОкончанияСрока = ОписаниеЗаявки.СрокДействия;
		
		Стр = "TRANS_ID="		+ Формат(ИдТранзакции, "ЧГ=") + ";"
			+ "ACCOUNT="		+ Счет + ";"
			+ "CLIENT_CODE="	+ КодКлиента + ";"
			+ "CLASSCODE="		+ КодКласса + ";"
			+ "SECCODE="		+ КодБумаги + ";"
			+ "OPERATION="		+ "B" + ";"	// buy
			+ "QUANTITY="		+ Формат(КолвоЗаявки, ФорматКоличества) + ";"
		;
		
		Если ВидЗаявки = "Лимитированная" Тогда
			Стр = Стр	
				+ "ACTION="					+ "NEW_ORDER" + ";"
				+ "TYPE="					+ "L" + ";"	// limit
				+ "PRICE="					+ Формат(ЦенаЗаявки, ФорматЦены) + ";"
			;
			
		ИначеЕсли ВидЗаявки = "Тэйк-профит" Тогда
			
			Стр = Стр
				+ "ACTION="					+ "NEW_STOP_ORDER" + ";"
				+ "STOP_ORDER_KIND="		+ "TAKE_PROFIT_STOP_ORDER" + ";"
				+ "STOPPRICE="				+ Формат(ЦенаЗаявки, ФорматЦены) + ";"
				+ "OFFSET="					+ Формат(ОтступПроц, ФорматЦены) + ";"
				+ "OFFSET_UNITS="			+ "PERCENTS" + ";"
				+ "SPREAD="					+ Формат(ЗащитныйСпрэдПроц, ФорматЦены) + ";"
				+ "SPREAD_UNITS="			+ "PERCENTS" + ";"
			;
			Если ЗначениеЗаполнено(ДатаОкончанияСрока) Тогда
				Стр = Стр
				+ "EXPIRY_DATE="			+ Формат(ДатаОкончанияСрока, ФорматДаты) + ";"
			КонецЕсли; 
			
		ИначеЕсли ВидЗаявки = "Стоп-цена по другой бумаге" Тогда
			
			Стр = Стр
				+ "ACTION="					+ "NEW_STOP_ORDER" + ";"
				+ "STOP_ORDER_KIND="		+ "CONDITION_PRICE_BY_OTHER_SEC" + ";"
				+ "STOPPRICE_CLASSCODE="	+ КодКласса + ";"
				+ "STOPPRICE_SECCODE="		+ КодБумаги + ";"
				+ "STOPPRICE_CONDITION="	+ "<=" + ";"
				+ "STOPPRICE="				+ Формат(ЦенаЗаявки, ФорматЦены) + ";"
				+ "PRICE="					+ Формат(ЦенаЗаявки, ФорматЦены) + ";"
			;
			Если ЗначениеЗаполнено(ДатаОкончанияСрока) Тогда
				Стр = Стр
				+ "EXPIRY_DATE="			+ Формат(ДатаОкончанияСрока, ФорматДаты) + ";"
			КонецЕсли; 
			
		КонецЕсли; 
		
		ЗаписьТекста.ЗаписатьСтроку(Стр);
		
		ИдТранзакции = ИдТранзакции + 1;
		
	КонецЦикла; 
	
	ЗаписьТекста.Закрыть();
	
	НачЗначTransID = ИдТранзакции;
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	МассивОписанийЗаявок = ПолучитьДанныеНаСервере();
	ВыгрузитьЗаявки(МассивОписанийЗаявок);
	ПоказатьОповещениеПользователя("Выгрузка заявок завершена!");
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачЗначTransID = День(ТекущаяДатаСеанса()) * 1000 + 1;
	
	СЗ = Элементы.КодКласса.СписокВыбора;
	СЗ.Добавить("TQBR");
	СЗ.Добавить("TQOB");
	СЗ.Добавить("EQOB");
	
КонецПроцедуры
